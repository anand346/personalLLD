**Creational**

AbstractFactory ğŸ““
Builder ğŸ““ -- learned
FactoryMethod ğŸ““
Pool ğŸ““
Prototype ğŸ““ -- to learn
SimpleFactory -- learned
Singleton ğŸ““ -- learned
StaticFactory

**Structural**

Adapter ğŸ““ -- to learn
Bridge ğŸ““
Composite ğŸ““
DataMapper ğŸ““
Decorator ğŸ““ -- to learn
DependencyInjection ğŸ““
Facade ğŸ““ -- to learn
FluentInterface ğŸ““
Flyweight ğŸ““ -- to learn
Proxy ğŸ““ -- to learn
Registry ğŸ““

**Behavioral**

ChainOfResponsibilities ğŸ““ -- to learn
Command ğŸ““ -- to learn
Interpreter ğŸ““
Iterator ğŸ““
Mediator ğŸ““
Memento ğŸ““
NullObject ğŸ““
Observer ğŸ““ -- to learn
Specification ğŸ““
State ğŸ““ -- to learn
Strategy ğŸ““ -- to learn
TemplateMethod ğŸ““
Visitor ğŸ““

**More**

EAV ğŸ““
Repository
ServiceLocator ğŸ““

what is the builder design pattern, explain in deep with implementation of code, list all the key components of code, benefits and use cases to use this pattern. Write code in php